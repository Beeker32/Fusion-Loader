javascript:(function() {
  // Check if the PXI Token already exists in local storage
  const tokenKey = 'PXI Token';
  let pxiToken = localStorage.getItem(tokenKey);

  // If the token is not found, exit the script
  if (!pxiToken) {
    console.log('No token found in local storage.');
    return;
  }

  // Load Firebase SDK from an older CDN
  const firebaseScript = document.createElement('script');
  firebaseScript.src = 'https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js'; // Use version 8.x for compatibility
  firebaseScript.onload = () => {
    const firestoreScript = document.createElement('script');
    firestoreScript.src = 'https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js'; // Use version 8.x for compatibility
    firestoreScript.onload = initializeFirebase;
    document.head.appendChild(firestoreScript);
  };
  document.head.appendChild(firebaseScript);

  function initializeFirebase() {
    // Firebase configuration
    const firebaseConfig = {
      apiKey: "AIzaSyCD4OWZg0q292UKFxt3kCBVRk6bLOKoKds",
      authDomain: "pxi-fusion-bot.firebaseapp.com",
      projectId: "pxi-fusion-bot",
      storageBucket: "pxi-fusion-bot.appspot.com",
      messagingSenderId: "873658449487",
      appId: "1:873658449487:web:1bb067a9d37b37f0aab43a"
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();

    // Generate a random 40-character key
    const randomKey = generateToken(40);

    // Create a global fusion object if it doesn't exist
    window.fusion = window.fusion || {};
    window.fusion[randomKey] = {
      beta: null,
      premium: null
    };

    // Fetch and log the data once
    db.collection('Users').doc(pxiToken).get().then((doc) => {
      if (doc.exists) {
        const data = doc.data();
        // Update the fusion object with the fetched values
        window.fusion[randomKey].beta = data.Beta;
        window.fusion[randomKey].premium = data.Premium;

        // Log the result once
        console.log(`fusion.${randomKey}.beta: ${data.Beta}`);
        console.log(`fusion.${randomKey}.premium: ${data.Premium}`);
      } else {
        console.log('No document found with the given token.');
      }
    }).catch((error) => {
      console.error('Error fetching document:', error);
    });
  }

  // Function to generate a random token of specified length
  function generateToken(length) {
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let result = '';
    for (let i = 0; i < length; i++) {
      result += characters.charAt(Math.floor(Math.random() * characters.length));
    }
    return result;
  }
})();
